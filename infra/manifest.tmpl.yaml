apiVersion: actions.summerwind.dev/v1alpha1
kind: RunnerDeployment
metadata:
  name: runner-deployment
  namespace: ${namespace}
spec:
  template:
    spec:
      image: ghcr.io/tlomodel/actions-runner:latest
      imagePullPolicy: Always
      # Options: https://github.com/actions/actions-runner-controller/blob/dcb64f0b9e889f4751bf257f2a37632ce10a3e10/docs/automatically-scaling-runners.md
      repository: ${repository}
      labels:
        - profiling
      dockerEnabled: false
      securityContext:
        seLinuxOptions:
          level: "s0"
          role: "system_r"
          type: "super_t"
          user: "system_u"
      # See <https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/>.
      resources:
        limits:
          cpu: "2"
          memory: "32Gi"
        requests:
          cpu: "1"
          # Note that you can't request the maximum total memory of a node, because AKS applies
          # some formula to limit the total amount of memory that can be allocated:
          # <https://learn.microsoft.com/en-us/azure/aks/concepts-clusters-workloads#memory>.
          memory: "12Gi"
      env:
        - name: RUNNER_ALLOW_RUNASROOT
          value: "0"
        - name: RUNNER_EPHEMERAL
          value: "true"
      containers:
        - name: runner
---
apiVersion: actions.summerwind.dev/v1alpha1
kind: HorizontalRunnerAutoscaler
metadata:
  name: runner-deployment-autoscaler
  namespace: ${namespace}
spec:
  # Runners in the targeted RunnerDeployment won't be scaled down
  # for 1 minute instead of the default 10 minutes now
  scaleDownDelaySecondsAfterScaleOut: 60
  scaleTargetRef:
    kind: RunnerDeployment
    name: runner-deployment
  minReplicas: 0
  maxReplicas: ${max_replicas}
  metrics:
  - type: TotalNumberOfQueuedAndInProgressWorkflowRuns
    repositoryNames:
    - ${repository}
